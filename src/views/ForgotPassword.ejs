<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="shortcut icon" type="image/x-icon" href="./favicon.ico" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
      crossorigin="anonymous"
    />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css"
    />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Macondo&family=Roboto&display=swap"
      rel="stylesheet"
    />
    <title>Renzu</title>

    <style>
      .formWrap {
        overflow-y: auto;
        margin: 15px;
        background-color: #fff;
        border-radius: 5px;
        border-width: 0.2px;
        border-color: #c5c5c5;
        width: 350px;
        font-family: "Roboto";
        box-shadow: 0 0 10px 0 rgba(100, 100, 100, 0.26);
      }
      .txtH {
        font-size: 11px;
        margin: 0;
        width: "100%";
      }
      .helpT1 {
        margin-bottom: 8px;
        color: #ff0000;
      }
      .helpT2 {
        margin-bottom: 0;
      }
      .btnConfirm {
        background-color: #191970;
        border: none;
        margin-top: 8px;
        font-size: 14px;
      }
      .lb {
        font-size: 12px;
      }
      .wrapOut {
      }
      .error {
        border: 1px solid #ff0000;
      }
      .successTxt {
        color: #00D100;
      }
      .errorTxt {
        color:#ff0000;
      }
      .txtNote {
        font-size: 12px;
        margin: 0;
      }
      input::-webkit-input-placeholder {
        font-size: 12px;
      }
      h6 {
        font-weight: bold;
        border-bottom: 0.5px solid #c5c5c5;
        padding: 7px;
        width: "100%";
        margin-bottom: 0.1em;
        text-align: center;
      }
      body {
        padding: 0;
        margin: 0;
        box-sizing: border-box;
        background-color: #e5e8e7;
        min-height: "100%";
      }
      form {
        padding: 15px 12px;
      }
    </style>
  </head>
  <body>

    <div class="container-fluid wrapOut d-flex justify-content-center">
      <div class="formWrap">
        <h6>Forgot Password</h6>
        <form id="form_fp" method="post">
          <p class="txtNote">
            Email: <a class="form-text txtH"> <%= email %> </a>
          </p>
          <p class="form-text txtH">
            You'll change your password here. Please remember your password when
            completing new password
          </p>
          <p id="results" class="form-text txtH"></p>
          <div
            class="w-100 d-flex flex-column justify-content-center align-items-center"
          >
            <div class="mb-1 w-100 inp">
              <label for="Password" class="form-label lb">New Password</label>
              <input
                type="password"
                name="password"
                class="form-control"
                id="password"
                aria-describedby="passHelp"
                placeholder="New Password"
                required
              />
              <div id="passHelp" class="form-text txtH helpT1"> </div>
            </div>
            <div class="mb-1 w-100 inp">
              <label for="ConfirmPassword" class="form-label lb"
                >Confirm Password</label
              >
              <input
                type="password"
                name="cpassword"
                class="form-control"
                id="cpassword"
                aria-label="CpassHelp"
                placeholder="Confirm Password"
                required
              />
              <div id="CpassHelp" class="form-text txtH helpT1"></div>
            </div>
            <button type="submit" class="btn btn-primary w-100 btnConfirm">
              Change Password
            </button>
          </div>
        </form>
      </div>
    </div>

    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"
      integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js"
      integrity="sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF"
      crossorigin="anonymous"
    ></script>
    <script type="text/javascript">
      let regexFormatPassword =
        /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-.,:+;]).{8,}$/;
      const form = document.getElementById("form_fp");
      var checkInput = {};
      let engineValidation = (
        value,
        condition,
        textErr,
        fieldError,
        fieldInput
      ) => {
        if (!value || condition) {
          document.getElementById(fieldError).innerHTML = textErr;
          document.getElementById(fieldInput).classList.add("error");
          checkInput[fieldInput] = "active";
        } else {
          document.getElementById(fieldError).innerHTML = "";
          document.getElementById(fieldInput).classList.remove("error");
          delete checkInput[fieldInput];
        }
      };
      form.addEventListener("submit", async function (e) {
        e.preventDefault();
        const actionString = `/auth/resetPass/` + "<%= uid %>" + "/" + "<%= token %>";
        let values = {};
        const form = document.forms[0];
        for (let i = 0; i < form.length; i++) {
          values[form.elements[i].name] = form.elements[i].value;
        }
        delete values[""];
        if (Object.keys(values).length > 0) {
          engineValidation(
            values["password"],
            !values["password"]?.match(regexFormatPassword),
            "The password must contain 8 characters, at least one upper letter, lower letter, number and special characters",
            "passHelp",
            "password"
          );
          engineValidation(
            values["cpassword"],
            values["cpassword"] !== values["password"],
            "The password must be matched each other",
            "CpassHelp",
            "cpassword"
          );
           
          if (Object.keys(checkInput).length < 1) {
            let headers = new Headers();
            headers.append("Content-Type", "application/json");
            headers.append("Accept", "application/json");
            await fetch(actionString, {
              method: "POST",
              body: JSON.stringify(values),
              headers: headers,
            }).then((res) => {
              if(res.ok) {
                document.getElementById("results").classList.add("successTxt");
                form.reset();
              } else {
                document.getElementById("results").classList.add("errorTxt");
              }
              return res.json();
            })
            .then((val) => {
              document.getElementById("results").innerHTML = val.message
            })
          }
        }
      });
      const acceptsInput = (elem) => {
        if (!elem) {
          return false;
        }

        let tag = elem.tagName;
        return (
          tag == "INPUT" ||
          tag == "SELECT" ||
          tag == "TEXTAREA" ||
          elem.isContentEditable ||
          elem.tabIndex >= 0
        );
      };
      document.addEventListener("touchend", (e) => {
        if (!acceptsInput(e.target)) {
          document.activeElement.blur();
        }
      });
    </script>
  </body>
</html>
